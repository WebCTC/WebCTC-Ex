buildscript {
    ext.kotlin_version = '1.7.10'
    ext.ktor_version = '2.0.1'
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:1.2-1.0.9'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configurations {
    embed
    api.extendsFrom(embed)
}

apply plugin: 'kotlin'
apply plugin: 'forge'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

version = "1.7.10-SNAPSHOT"
group = "org.webctc.webctcex" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "WebCTCEx"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

repositories {
    mavenCentral()
    maven { url "https://www.cursemaven.com" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    api 'com.github.WebCTC:WebCTC:1.7-SNAPSHOT'

    embed "io.ktor:ktor-server-auth:$ktor_version"
    embed "io.ktor:ktor-server-sessions:$ktor_version"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(Jar) { compileJava.options.encoding = 'UTF-8' }

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            include 'org/webctc/', 'io/ktor/server/auth/', 'io/ktor/server/sessions/', 'kotlin/reflect/'
        }
    }

    from(rootDir) {
        include 'README.md'
        include 'LICENSE'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}